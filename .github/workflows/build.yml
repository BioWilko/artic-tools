name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        toolchain:
          - linux-gcc
          - macos-clang
          - windows-msvc

        configuration:
          - debug

        include:
          - toolchain: linux-gcc
            os: ubuntu-latest
            compiler: gcc

          - toolchain: macos-clang
            os: macos-latest
            compiler: clang

          - toolchain: windows-msvc
            os: windows-latest
            compiler: msvc

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install boost & curl (linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libboost-all-dev libcurl4-openssl-dev -y

      - name: Install boost (osx)
        if: matrix.os == 'macos-latest'
        run: brew install boost

      - name: Install boost (windows)
        if: matrix.os == 'windows-latest'
        id: install-boost
        uses: MarkusJx/install-boost@v1.0
        with:
          boost_version: 1.71.0
          toolset: msvc14.2

      - name: Install curl (windows)
        if: matrix.os == 'windows-latest'
        run: pacman -S libcurl-devel --noconfirm

      - name: Configure (windows)
        if: matrix.os == 'windows-latest'
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
        env:
          BOOST_ROOT: ${{steps.install-boost.outputs.BOOST_ROOT}}
          CURL_INCLUDE_DIR: ${{steps.install-curl.outputs.CURL_INCLUDE_DIR}}

      - name: Configure (*nix)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}

      - name: Build with ${{ matrix.compiler }}
        run: cmake --build build

      - name: Test
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest -C ${{ matrix.configuration }}
